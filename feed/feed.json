{
	"version": "https://jsonfeed.org/version/1.1",
	"title": "Rifai&#39;s blog",
	"language": "en",
	"home_page_url": "https://rifai.github.io/",
	"feed_url": "https://rifai.github.io/feed/feed.json",
	"description": "Personal blog of Rifai.",
	"author": {
		"name": "Ahmad Rifai",
		"url": "https://rifai.github.io/about-me/"
	},
	"items": [
		{
			"id": "https://rifai.github.io/blog/2023/0921-hello-world/",
			"url": "https://rifai.github.io/blog/2023/0921-hello-world/",
			"title": "Hello world.",
			"content_html": "<p>Well, this is my first post on my new blog. I never thought I'd be blogging on github, and now here we are.</p>\n<p>This blog is hosted using <a href=\"https://pages.github.com/\">Github Pages</a> and built with <a href=\"https://www.11ty.dev/\">Eleventy</a>. It differs from traditional blogs like WordPress or Blogger because GitHub Pages is a static web hosting platform. As a result, there are no databases or interactive features.</p>\n<p>With the advent of static site generators, it is now possible to create a blogging website hosted on static web hosting. Github has its native support for static site generator with Jekyll. But I decided to use Eleventy instead.</p>\n<p>I'll be posting everything about programming and technology here. Hopefully, I can overcome procrastination and start blogging again.</p>\n<p>See you</p>\n",
			"date_published": "2023-09-21T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.github.io/blog/2021/0905-fat-astro/",
			"url": "https://rifai.github.io/blog/2021/0905-fat-astro/",
			"title": "Protoype Demo - Fat Astro",
			"content_html": "<p>Three years ago, I made game demo called Fat Astro. About astronaut who are fat. Duh. It's a 3d puzzle game. Inspired by BOXBOY! but in 3D.</p>\n<p>http://www.youtube.com/watch?v=BqUYrAIIiYA</p>\n",
			"date_published": "2020-07-04T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.github.io/blog/2020/0704-connection-refused-errno-111/",
			"url": "https://rifai.github.io/blog/2020/0704-connection-refused-errno-111/",
			"title": "SocketException: OS Error: Connection refused, errno = 111",
			"content_html": "<p>I encountered a peculiar error while developing a Flutter app on Windows. I had configured my local Apache server as the API server. When I tested the API using Postman, everything worked fine. However, the error surfaced when I tested the API within the app using an emulator.</p>\n<p>As it turns out, the problem was with the emulator itself. Android emulators cannot communicate with <strong>127.0.0.1</strong> or <strong>localhost</strong>. The solution was straightforward: I replaced localhost with <strong>10.0.2.2</strong>. This IP address serves as a special alias to your host loopback interface.</p>\n<p>For more details, you can refer to <a href=\"https://developer.android.com/studio/run/emulator-networking\">this docs</a></p>\n",
			"date_published": "2020-07-04T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.github.io/blog/2018/0425-snap-vector-direction-to-nearest-axis/",
			"url": "https://rifai.github.io/blog/2018/0425-snap-vector-direction-to-nearest-axis/",
			"title": "Snap vector direction to nearest axis.",
			"content_html": "<p>I have a case where I need to snap my character's direction to the nearest axis. It looks something like this.</p>\n<p><img src=\"https://i.imgur.com/iTCZXET.gif\" alt=\"Imgur\"></p>\n<p>My solution is to identify the axis with the largest absolute value, set it to 1, and set the other axes to 0. I also retain the sign of the largest axis.</p>\n<p>Example, we have <strong>Vector3(-0.5f, 0.1f, 0)</strong>. The snapped direction is Vector3(-1,0,0).</p>\n<pre class=\"language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token return-type class-name\">Vector3</span> <span class=\"token function\">SnappedToNearestAxis</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> x <span class=\"token operator\">=</span> <span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> y <span class=\"token operator\">=</span> <span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> z <span class=\"token operator\">=</span> <span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> y <span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span> x <span class=\"token operator\">></span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token function\">Sign</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">></span> x <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">></span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">Sign</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">Sign</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n",
			"date_published": "2018-04-25T00:00:00Z"
		}
		
	]
}
