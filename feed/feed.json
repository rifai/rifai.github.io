{
	"version": "https://jsonfeed.org/version/1.1",
	"title": "Ahmad Rifai | Mobile and Game developer",
	"language": "en",
	"home_page_url": "https://rifai.id/",
	"feed_url": "https://rifai.id/feed/feed.json",
	"description": "Experienced mobile and game developer specializing in Godot Engine, Unity3D, Flutter and Android development. Browse my portfolio and contact me for app/game development projects.",
	"author": {
		"name": "Ahmad Rifai",
		"url": "https://rifai.id/about-me/"
	},
	"items": [
		{
			"id": "https://rifai.id/blog/2023/1219-prototype-rc-game/",
			"url": "https://rifai.id/blog/2023/1219-prototype-rc-game/",
			"title": "Prototype of RC style game",
			"content_html": "<p>I'm working on new arcade style car racing inspired by classic PS1 games like RC de Go! and Crash Team Racing. After some challenges with vehicle physics in Godot, I opted for Rigidbody3D over VehicleBody3D, and I'm pleased with the results. Check out this video demo of the game in action!</p>\n<video controls=\"\">\n\t\t\t\t<source src=\"https://rifai.id/public-assets/video/rc-prototype.mp4\" type=\"video/mp4\">\n\t\t\t\tYour browser does not support the video tag.\n\t\t\t</video>\n",
			"date_published": "2023-12-19T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2023/1022-using-unity-with-vscode/",
			"url": "https://rifai.id/blog/2023/1022-using-unity-with-vscode/",
			"title": "Unity Development with Visual Studio Code",
			"content_html": "<p>Unity's default Integrated Development Environment (IDE) is Visual Studio, but as I mentioned in a <a href=\"https://rifai.id/blog/2023/1020-using-godot-with-vscode\">previous post</a>, I prefer Visual Studio Code (VSCode) for its efficiency.</p>\n<p>I've found that using Visual Studio only for Unity projects can be a bit overkill, and it can consume significant storage. In contrast, VSCode is much lighter, making it an excellent choice for Unity3D.</p>\n<p>To make the switch, follow these steps:</p>\n<h1 id=\"unity\" tabindex=\"-1\">Unity <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/1022-using-unity-with-vscode/\">#</a></h1>\n<ol>\n<li>Open Unity <strong>Preferences</strong>.</li>\n<li>Under <strong>External Tools</strong>, select <strong>Visual Studio Code</strong> as your <strong>External Script Editor</strong>.\n<picture><source type=\"image/avif\" srcset=\"https://rifai.id/img/DT321BJz3G-938.avif 938w\"><source type=\"image/webp\" srcset=\"https://rifai.id/img/DT321BJz3G-938.webp 938w\"><img alt=\"Unity Preference\" loading=\"lazy\" class=\"img-responsive\" decoding=\"async\" src=\"https://rifai.id/img/DT321BJz3G-938.png\" width=\"938\" height=\"580\"></picture></li>\n</ol>\n<h1 id=\"vscode\" tabindex=\"-1\">VSCode <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/1022-using-unity-with-vscode/\">#</a></h1>\n<p>Install the Unity extension from Microsoft at <a href=\"https://aka.ms/vscode-unity\">https://aka.ms/vscode-unity</a>.</p>\n<p>With these adjustments, you're all set to start editing with Visual Studio Code.<br>\nShould you have any questions or need assistance, please feel free to email me at <a href=\"mailto:arifai.dev@gmail.com\">arifai.dev@gmail.com</a></p>\n",
			"date_published": "2023-10-22T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2023/1020-using-godot-with-vscode/",
			"url": "https://rifai.id/blog/2023/1020-using-godot-with-vscode/",
			"title": "Programming and debugging godot with Visual Studio Code",
			"content_html": "<p>Visual Studio Code, often referred to as VSCode, is undeniably one of the most popular code editors. I personally rely on it for my daily work. However, when it comes to Godot, while the engine has its own editor, I don't like it much.</p>\n<p>The good news is, you can seamlessly integrate Godot with Visual Studio Code. In this post, I'll walk you through the process of changing the default text editor to VSCode for your Godot projects. Not only that, but I'll also show you how to enable debugging and breakpoints within VSCode.</p>\n<p>Let's get started!</p>\n<h1 id=\"godot\" tabindex=\"-1\">Godot <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/1020-using-godot-with-vscode/\">#</a></h1>\n<p>Please note that this tutorial is intended for use with Godot 4.1.2, the latest stable version available at the time of writing.</p>\n<p>To integrate an external code editor like Visual Studio Code (VSCode) with Godot, follow these steps:</p>\n<ol>\n<li>Open Godot Engine and navigate to <strong>Editor</strong> &gt; <strong>Editor Settings.</strong></li>\n<li>Under <strong>Text Editor,</strong> enable <strong>Use External Editor.</strong></li>\n<li>Specify the <strong>Exec Path</strong> to your VSCode installation.</li>\n<li>For <strong>Exec Flags,</strong> input: {project} --goto {file}:{line}:{col}</li>\n</ol>\n<p><picture><source type=\"image/avif\" srcset=\"https://rifai.id/img/3nA9HLj0M0-960.avif 960w\"><source type=\"image/webp\" srcset=\"https://rifai.id/img/3nA9HLj0M0-960.webp 960w\"><img alt=\"Godot Editor Settings\" loading=\"lazy\" class=\"img-responsive\" decoding=\"async\" src=\"https://rifai.id/img/3nA9HLj0M0-960.jpeg\" width=\"960\" height=\"786\"></picture></p>\n<p>Still in <strong>Editor Settings,</strong> proceed to <strong>Network</strong> &gt; <strong>Language Server.</strong> Locate <strong>Remote Port</strong> and ensure it's set to <strong>6005.</strong> This port value will be used in another setting within VSCode.</p>\n<h1 id=\"vscode\" tabindex=\"-1\">VSCode <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/1020-using-godot-with-vscode/\">#</a></h1>\n<ol>\n<li>Begin by installing the <strong>godot-tools</strong> extension in Visual Studio Code.</li>\n<li>Open VSCode and go to <strong>File</strong> &gt; <strong>Preferences</strong> &gt; <strong>Settings</strong>.</li>\n<li>Under <strong>User</strong>, look for <strong>Extensions</strong> and click on <strong>Godot Tools configuration</strong>.</li>\n<li>Here, you'll find 'Gdscript_lsp_server_port.' Set this to <strong>6005</strong>.</li>\n</ol>\n<p><picture><source type=\"image/avif\" srcset=\"https://rifai.id/img/fGQNK0aoMf-960.avif 960w\"><source type=\"image/webp\" srcset=\"https://rifai.id/img/fGQNK0aoMf-960.webp 960w\"><img alt=\"Godot VSCode Autocomplete\" loading=\"lazy\" class=\"img-responsive\" decoding=\"async\" src=\"https://rifai.id/img/fGQNK0aoMf-960.jpeg\" width=\"960\" height=\"419\"></picture></p>\n<p>That's it! You've successfully configured VSCode to serve as your primary editor for Godot.&quot;</p>\n<h1 id=\"debugging\" tabindex=\"-1\">Debugging <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/1020-using-godot-with-vscode/\">#</a></h1>\n<ol>\n<li>Open VSCode.</li>\n<li>Navigate to the 'Run and Debug' section.</li>\n<li>Click on 'Create a launch.json file.'</li>\n<li>Select 'GDScript Godot Debug.'</li>\n</ol>\n<p>This action will generate a 'launch.json' file in the '.vscode' folder located within your project directory.</p>\n<p>Now, copy and paste the provided code into your <strong>launch.json</strong> file.&quot;</p>\n<pre class=\"language-json\" tabindex=\"0\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Godot\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"godot\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"project\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceFolder}\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6006</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"debugServer\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6006</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"launch_game_instance\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"launch_scene\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n\t\t  <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Once you've ensured everything is correctly set up, you can initiate breakpoints and debugging with a simple press of <strong>F5</strong>.</p>\n<p><picture><source type=\"image/avif\" srcset=\"https://rifai.id/img/6YeBzx5AWH-960.avif 960w\"><source type=\"image/webp\" srcset=\"https://rifai.id/img/6YeBzx5AWH-960.webp 960w\"><img alt=\"Godot VSCode Autocomplete\" loading=\"lazy\" class=\"img-responsive\" decoding=\"async\" src=\"https://rifai.id/img/6YeBzx5AWH-960.jpeg\" width=\"960\" height=\"458\"></picture></p>\n<p>It's worth noting that in the future, Godot may update their extension for easier setup process. Until then, this workaround has been tried and tested, providing an effective solution.</p>\n<p>If you have any questions or need further assistance, feel free to email me at <a href=\"mailto:arifai.dev@gmail.com\">arifai.dev@gmail.com</a></p>\n",
			"date_published": "2023-10-20T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2023/1018-devlog-continue-fatastro/",
			"url": "https://rifai.id/blog/2023/1018-devlog-continue-fatastro/",
			"title": "Devlog #1 : Reviving Fat Astro",
			"content_html": "<p>Five years ago, I introduced the prototype game 'Fat Astro,' a unique blend of gaming elements inspired by 'Boxboy' and 'Captain Toad'. Today, I decided to continue the game, this time harnessing the power of Godot Engine.</p>\n<p>The previous game engine had become stagnant, leading me to explore the most promising open-source alternative available. This week, I've made basic character movement and walking mechanics. While there may not be much gameplay to showcase at this moment, here's a sneak peek of the progress.</p>\n<video controls=\"\">\n\t\t\t\t<source src=\"https://rifai.id/public-assets/video/fat-movement.mp4\" type=\"video/mp4\">\n\t\t\t\tYour browser does not support the video tag.\n\t\t\t</video>\n<p>I promise will update the progress more frequently.</p>\n",
			"date_published": "2023-10-18T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2023/1014-third-person-camera-godot/",
			"url": "https://rifai.id/blog/2023/1014-third-person-camera-godot/",
			"title": "Third person camera on Godot",
			"content_html": "<p>The third-person shooter genre is undeniably popular in the world of gaming. To help you dive into this exciting genre, I've made a simple boilerplate code that demonstrates how to create a third-person camera using Godot, the powerful open source game engine.</p>\n<pre class=\"language-gdscript\" tabindex=\"0\"><code class=\"language-gdscript\"><span class=\"token keyword\">extends</span> <span class=\"token class-name\">Camera3D</span>\n\n\n@<span class=\"token keyword\">export</span> \n<span class=\"token keyword\">var</span> _target<span class=\"token punctuation\">:</span><span class=\"token class-name\">Node3D</span> <span class=\"token comment\"># your character</span>\n\n@<span class=\"token keyword\">export</span>\n<span class=\"token keyword\">var</span> _rotation_speed<span class=\"token punctuation\">:</span><span class=\"token class-name\">float</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.003</span> <span class=\"token comment\">#height above target</span>\n\n@<span class=\"token keyword\">export</span>\n<span class=\"token keyword\">var</span> _limit_x<span class=\"token punctuation\">:</span><span class=\"token class-name\">float</span> <span class=\"token operator\">=</span> <span class=\"token number\">60</span> <span class=\"token comment\"># in degree</span>\n\n<span class=\"token keyword\">var</span> _current_rot<span class=\"token punctuation\">:</span><span class=\"token class-name\">Vector3</span>\n<span class=\"token keyword\">var</span> _distance<span class=\"token punctuation\">:</span><span class=\"token class-name\">float</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">_ready</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    _current_rot <span class=\"token operator\">=</span> rotation\n    <span class=\"token keyword\">var</span> desired_position <span class=\"token operator\">=</span> _target<span class=\"token punctuation\">.</span>global_position <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>quaternion <span class=\"token operator\">*</span> <span class=\"token function\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _distance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    global_position <span class=\"token operator\">=</span> desired_position\n    <span class=\"token function\">_show_pointer</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">_input</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> _target <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span>\n        \n    <span class=\"token keyword\">if</span> event <span class=\"token keyword\">is</span> InputEventMouseMotion<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">var</span> input_pos <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>relative\n        <span class=\"token function\">_update_rotation</span><span class=\"token punctuation\">(</span>input_pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> _rotation_speed<span class=\"token punctuation\">,</span> input_pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> _rotation_speed<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">_update_rotation</span><span class=\"token punctuation\">(</span>input_x<span class=\"token punctuation\">:</span><span class=\"token class-name\">float</span><span class=\"token punctuation\">,</span> input_y<span class=\"token punctuation\">:</span><span class=\"token class-name\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">var</span> rotation_x <span class=\"token operator\">=</span> _current_rot<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> input_y\n    <span class=\"token keyword\">var</span> limit <span class=\"token operator\">=</span> <span class=\"token function\">deg_to_rad</span><span class=\"token punctuation\">(</span>_limit_x<span class=\"token punctuation\">)</span>\n\n    _current_rot<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">clampf</span><span class=\"token punctuation\">(</span>rotation_x<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>limit<span class=\"token punctuation\">,</span> limit<span class=\"token punctuation\">)</span>\n    _current_rot<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> _current_rot<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> input_x<span class=\"token punctuation\">;</span>\n\n    rotation <span class=\"token operator\">=</span> _current_rot\n    <span class=\"token keyword\">var</span> desired_position <span class=\"token operator\">=</span> _target<span class=\"token punctuation\">.</span>global_position <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>quaternion <span class=\"token operator\">*</span> <span class=\"token function\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _distance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    global_position <span class=\"token operator\">=</span> desired_position\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">_show_pointer</span><span class=\"token punctuation\">(</span>show_pointer<span class=\"token punctuation\">:</span><span class=\"token class-name\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> show_pointer<span class=\"token punctuation\">:</span>\n        Input<span class=\"token punctuation\">.</span><span class=\"token function\">set_mouse_mode</span><span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token constant\">MOUSE_MODE_VISIBLE</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        Input<span class=\"token punctuation\">.</span><span class=\"token function\">set_mouse_mode</span><span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token constant\">MOUSE_MODE_CAPTURED</span><span class=\"token punctuation\">)</span></code></pre>\n<p>You can access the code and resources <a href=\"https://github.com/rifai/godot-boilerplate\">here</a>.</p>\n<p>But that's not all - my commitment to your game development journey goes beyond this code. In the future, I'll continue to expand this resource with the most common game features and Godot capabilities. This will serve as a valuable repository for all your reusable game development needs.</p>\n",
			"date_published": "2023-10-14T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2023/0929-common-git-scenario/",
			"url": "https://rifai.id/blog/2023/0929-common-git-scenario/",
			"title": "Git scenario 1 : Urgent bug report",
			"content_html": "<p>You're working on a software project and are in the middle of implementing a new feature in your branch. However, you receive an urgent bug report that requires your immediate attention.<br>\nYou don't want to commit your incomplete work, so you decide to use git stash to temporarily save your changes and switch to a different branch to fix the bug.</p>\n<h2 id=\"1-check-your-current-branch\" tabindex=\"-1\">1. Check your current branch: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch</code></pre>\n<p>Output:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">* feature-branch\nmaster</code></pre>\n<p>You are currently on the <strong>feature-branch</strong>.</p>\n<h2 id=\"2-save-your-changes-to-a-stash\" tabindex=\"-1\">2. Save your changes to a stash: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash save <span class=\"token string\">\"Work in progress on new feature\"</span></code></pre>\n<p>This command stashes the changes with a descriptive message.</p>\n<h2 id=\"3-check-the-list-of-stashes\" tabindex=\"-1\">3. Check the list of stashes: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash list</code></pre>\n<p>Output:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">stash@<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span>: On feature-branch: Work <span class=\"token keyword\">in</span> progress on new feature</code></pre>\n<h2 id=\"4-switch-to-another-branch\" tabindex=\"-1\">4. Switch to another branch: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout bug-fix-branch</code></pre>\n<p>The developer is now on the <strong>bug-fix-branch</strong> to address the urgent bug.</p>\n<h2 id=\"5-fix-the-bug\" tabindex=\"-1\">5. Fix the bug: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-c\" tabindex=\"0\"><code class=\"language-c\"><span class=\"token comment\">// Make necessary code changes to fix the bug</span></code></pre>\n<h2 id=\"6-commit-the-bug-fix\" tabindex=\"-1\">6. Commit the bug fix: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Fixed the critical bug\"</span></code></pre>\n<p>The bug is fixed, and the changes are committed.</p>\n<h2 id=\"7-switch-back-to-the-feature-branch\" tabindex=\"-1\">7. Switch back to the feature branch: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout feature-branch</code></pre>\n<p>The developer returns to the <strong>feature-branch</strong>.</p>\n<h2 id=\"8-apply-the-stashed-changes\" tabindex=\"-1\">8. Apply the stashed changes: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash apply stash@<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span></code></pre>\n<p>The previously stashed changes are applied to the feature-branch. The developer can continue working on the new feature from where they left off.</p>\n<h2 id=\"9-check-the-status\" tabindex=\"-1\">9. Check the status: <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0929-common-git-scenario/\">#</a></h2>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> status</code></pre>\n<p>The developer sees the unstashed changes and can proceed with feature development.</p>\n",
			"date_published": "2023-09-29T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2023/0928-frequenly-used-git-command/",
			"url": "https://rifai.id/blog/2023/0928-frequenly-used-git-command/",
			"title": "Frequently used git command",
			"content_html": "<p>While using a GUI client for Git is helpful and user-friendly, the command-line interface, although more complex, offers greater power and speed.</p>\n<p>I've written this post to serve as a handy reference, eliminating the need to repeatedly search for specific commands on Google or Stack Overflow.</p>\n<p>Here's a list of Git commands I use frequently, as well as some less common ones</p>\n<h2 id=\"init\" tabindex=\"-1\">Init <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Initializes a new Git repository in current directory.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> init </code></pre>\n<h2 id=\"clone\" tabindex=\"-1\">Clone <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Clone a remote Git repository on local computer</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://repo-url.com </code></pre>\n<h2 id=\"status\" tabindex=\"-1\">Status <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Displays the current status of the working directory</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> status</code></pre>\n<h2 id=\"add\" tabindex=\"-1\">Add <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Stages changes in the working directory for the next commit</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>file<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> <span class=\"token operator\">&lt;</span>file<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> <span class=\"token operator\">&lt;</span>file<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>></span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>  </code></pre>\n<h2 id=\"commit\" tabindex=\"-1\">Commit <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Records changes in a new commit along with a descriptive message</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit –m <span class=\"token string\">\"&lt;message here>\"</span></code></pre>\n<h2 id=\"stash\" tabindex=\"-1\">Stash <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Temporarily saves changes for later use.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash save <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"&lt;message here>\"</span></code></pre>\n<p>Applies the changes from a specific stash back to working directory. The stash index number (e.g., stash@{0}) identifies the stash to apply. If not specified, it applies the most recent one.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash apply <span class=\"token punctuation\">[</span>stash@<span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre>\n<p>Applies and removes the changes from a specific stash. If not specified, it applies and removes the most recent stash.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash pop <span class=\"token punctuation\">[</span>stash@<span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre>\n<p>Deletes a specific stash, permanently removing it.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash drop <span class=\"token punctuation\">[</span>stash@<span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>: </code></pre>\n<h2 id=\"fetch\" tabindex=\"-1\">Fetch <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Downloads changes from a remote repository without merging.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> fetch</code></pre>\n<h2 id=\"pull\" tabindex=\"-1\">Pull <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Fetches and merges changes from a remote repository into the current branch.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull</code></pre>\n<h2 id=\"push\" tabindex=\"-1\">Push <a class=\"header-anchor\" href=\"https://rifai.id/blog/2023/0928-frequenly-used-git-command/\">#</a></h2>\n<p>Sends local commits to a remote repository to share changes.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">git</span> push</code></pre>\n<p>To be continued ...</p>\n",
			"date_published": "2023-09-28T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2023/0921-hello-world/",
			"url": "https://rifai.id/blog/2023/0921-hello-world/",
			"title": "Hello world.",
			"content_html": "<p>Well, this is my first post on my new blog. I never thought I'd be blogging on github, and now here we are.</p>\n<p>This blog is hosted using <a href=\"https://pages.github.com/\">Github Pages</a> and built with <a href=\"https://www.11ty.dev/\">Eleventy</a>. It differs from traditional blogs like WordPress or Blogger because GitHub Pages is a static web hosting platform. As a result, there are no databases or interactive features.</p>\n<p>With the advent of static site generators, it is now possible to create a blogging website hosted on static web hosting. Github has its native support for static site generator with Jekyll. But I decided to use Eleventy instead.</p>\n<p>I'll be posting everything about programming and technology here. Hopefully, I can overcome procrastination and start blogging again. Also, I'll be migrating my old posts from my previous defunct blog.</p>\n<p>See you</p>\n",
			"date_published": "2023-09-21T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2021/0905-fat-astro/",
			"url": "https://rifai.id/blog/2021/0905-fat-astro/",
			"title": "Protoype Demo - Fat Astro",
			"content_html": "<p>Three years ago, I made game demo called Fat Astro. About astronaut who are fat. Duh. It's a 3d puzzle game. Inspired by BOXBOY! but in 3D.</p>\n<p>http://www.youtube.com/watch?v=BqUYrAIIiYA</p>\n",
			"date_published": "2020-07-04T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2020/0704-custom-url-domain-xampp/",
			"url": "https://rifai.id/blog/2020/0704-custom-url-domain-xampp/",
			"title": "Custom url domain in Xampp",
			"content_html": "<p>If you are developing website in Xampp, you can use custom domain instead of <strong>localhost</strong> or <strong>127.0.0.1</strong>. You can make url like <strong>http://mydomain.local</strong> as an url for you local development.</p>\n<h2 id=\"prepare-project\" tabindex=\"-1\">Prepare project <a class=\"header-anchor\" href=\"https://rifai.id/blog/2020/0704-custom-url-domain-xampp/\">#</a></h2>\n<p>I'm assuming you have website project directory in <strong>C:/xampp/htdocs/mywebsite</strong>. We want to use url <strong>http://mydomain.local</strong>. I like using <strong>.local</strong> TLD to differentiate it with actual internet url. Then, add this line in the bottom.</p>\n<h2 id=\"edit-hosts-file\" tabindex=\"-1\">Edit hosts file <a class=\"header-anchor\" href=\"https://rifai.id/blog/2020/0704-custom-url-domain-xampp/\">#</a></h2>\n<p>Open <strong>C:\\Windows\\System32\\drivers\\etc\\hosts</strong>. You need Administrator Access to edit this file.</p>\n<pre class=\"language-systemd\" tabindex=\"0\"><code class=\"language-systemd\">127.0.0.1 mywebsite.local\n127.0.0.1 www.mywebsite.local</code></pre>\n<h2 id=\"edit-httpd-vhosts-conf\" tabindex=\"-1\">Edit httpd-vhosts.conf <a class=\"header-anchor\" href=\"https://rifai.id/blog/2020/0704-custom-url-domain-xampp/\">#</a></h2>\n<p>This file is located in <strong>C:\\xampp\\apache\\conf\\extra\\httpd-vhosts.conf</strong>. Add this code to the bottom.</p>\n<pre class=\"language-apacheconf\" tabindex=\"0\"><code class=\"language-apacheconf\"><span class=\"token directive-block tag\"><span class=\"token directive-block tag\"><span class=\"token punctuation\">&lt;</span>VirtualHost</span><span class=\"token directive-block-parameter attr-value\"> *<span class=\"token punctuation\">:</span>80</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token directive-inline property\">DocumentRoot</span> C:/xampp/htdocs/\n  <span class=\"token directive-inline property\">ServerName</span> localhost\n<span class=\"token directive-block tag\"><span class=\"token directive-block tag\"><span class=\"token punctuation\">&lt;/</span>VirtualHost</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Then, add this code and adjust with your projects.</p>\n<pre class=\"language-apacheconf\" tabindex=\"0\"><code class=\"language-apacheconf\"><span class=\"token directive-block tag\"><span class=\"token directive-block tag\"><span class=\"token punctuation\">&lt;</span>VirtualHost</span><span class=\"token directive-block-parameter attr-value\"> *<span class=\"token punctuation\">:</span>80</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token directive-inline property\">DocumentRoot</span> <span class=\"token string\">\"C:/xampp/htdocs/mywebsite\"</span>\n    <span class=\"token directive-inline property\">ServerName</span> mywebsite.local\n    <span class=\"token directive-inline property\">ServerAlias</span> www.mywebsite.local\n    <span class=\"token directive-block tag\"><span class=\"token directive-block tag\"><span class=\"token punctuation\">&lt;</span>Directory</span><span class=\"token directive-block-parameter attr-value\"> \"C<span class=\"token punctuation\">:</span>/xampp/htdocs/mywebsite\"</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token directive-inline property\">AllowOverride</span> All\n        <span class=\"token directive-inline property\">Require</span> all granted\n    <span class=\"token directive-block tag\"><span class=\"token directive-block tag\"><span class=\"token punctuation\">&lt;/</span>Directory</span><span class=\"token punctuation\">></span></span>\n<span class=\"token directive-block tag\"><span class=\"token directive-block tag\"><span class=\"token punctuation\">&lt;/</span>VirtualHost</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"finishing\" tabindex=\"-1\">Finishing <a class=\"header-anchor\" href=\"https://rifai.id/blog/2020/0704-custom-url-domain-xampp/\">#</a></h2>\n<p>You are done. Start or restart your Apache server. Go to <strong>http://mywebsite.local</strong> to test it. If you have any problems, drop the comments below.</p>\n",
			"date_published": "2020-07-04T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2020/0704-connection-refused-errno-111/",
			"url": "https://rifai.id/blog/2020/0704-connection-refused-errno-111/",
			"title": "SocketException: OS Error: Connection refused, errno = 111",
			"content_html": "<p>I encountered a peculiar error while developing a Flutter app on Windows. I had configured my local Apache server as the API server. When I tested the API using Postman, everything worked fine. However, the error surfaced when I tested the API within the app using an emulator.</p>\n<p>As it turns out, the problem was with the emulator itself. Android emulators cannot communicate with <strong>127.0.0.1</strong> or <strong>localhost</strong>. The solution was straightforward: I replaced localhost with <strong>10.0.2.2</strong>. This IP address serves as a special alias to your host loopback interface.</p>\n<p>For more details, you can refer to <a href=\"https://developer.android.com/studio/run/emulator-networking\">this docs</a></p>\n",
			"date_published": "2020-07-04T00:00:00Z"
		}
		,
		{
			"id": "https://rifai.id/blog/2018/0425-snap-vector-direction-to-nearest-axis/",
			"url": "https://rifai.id/blog/2018/0425-snap-vector-direction-to-nearest-axis/",
			"title": "Snap vector direction to nearest axis.",
			"content_html": "<p>I have a case where I need to snap my character's direction to the nearest axis. It looks something like this.</p>\n<p><img src=\"https://i.imgur.com/iTCZXET.gif\" alt=\"Imgur\"></p>\n<p>My solution is to identify the axis with the largest absolute value, set it to 1, and set the other axes to 0. I also retain the sign of the largest axis.</p>\n<p>Example, we have <strong>Vector3(-0.5f, 0.1f, 0)</strong>. The snapped direction is Vector3(-1,0,0).</p>\n<pre class=\"language-csharp\" tabindex=\"0\"><code class=\"language-csharp\"><span class=\"token return-type class-name\">Vector3</span> <span class=\"token function\">SnappedToNearestAxis</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector3</span> direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> x <span class=\"token operator\">=</span> <span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> y <span class=\"token operator\">=</span> <span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> z <span class=\"token operator\">=</span> <span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> y <span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span> x <span class=\"token operator\">></span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token function\">Sign</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">></span> x <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">></span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">Sign</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">Sign</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n",
			"date_published": "2018-04-25T00:00:00Z"
		}
		
	]
}
